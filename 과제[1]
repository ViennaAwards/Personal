	20181135 황호석
github는 무엇인가?
-github 는 분산 버전 관리 도구인 git을 사용하는 프로젝트를 지원하는 웹호스팅 서비스이다.
github가 인기 있는 이유는 무엇인가?
-git이 텍스트 명령어 입력 방식이지만 깃허브는 그래픽 사용자 인터페이스(GUI)를 제공한다. 
-여러 질문에 대한 답변, 이슈 사항을 기록하는 Issues 페이지를 제공하여 정보를 공유할 수 있게 한다.
git의 특징은 무엇이 있는가?
-git은 인터넷이 되지 않는 곳이라도 자신의 컴퓨터에서 버전 관리를 하고 네트워크 통신이 될 때 서버와 통신을 할 수 있다.
버전 관리란 무엇인가?
-파일/폴더를 추가/수정/삭제하여 사람이 직접 묶음을 관리
-원하는 때에 예전 내용 전체를 되돌려 볼 수 있다.
장점:복잡한 코드를 개발할 때는 이전과 비교해서 보기 쉬워짐
버전 관리를 사용하는 이유
-팀끼리 서로 개발 소스를 공유해가며 개발 파트를 나누어 공유하여 팀의    협동성을 높인다. 
기본용어
-커맨드 라인(Command Line): 깃 명령어를 입력할 때 사용하는 컴퓨터 프로그램 마우스를 사용하는 것이 아닌 프롬프트로 알려진 텍스트 기반 명령어를 입력한다. 

-저장소(Repository): 프로젝트가 거주할 수 있는 디렉토리나 저장 공간. 컴퓨터 안의 로컬 폴더가 될 수도 있고, 깃허브나 다른 온라인 호스트의 저장 공간이 될 수도 있다. 저장소 안에 코드, 텍스트, 이미지 등을 저장한 후 작명이 가능하다.

-버전관리(Version Control): 기본적으로, 깃이 서비스되도록 고안된 목적이다.
프로젝트 히스토리의 모든 시점의 “스냅샷”을 유지하므로, 결코 잃어버리거나 겹쳐 쓰지 않을 수 있다.

-커밋(Commit): 그 시점의 저장소의 “스냅샷”을 찍어, 프로젝트를 이전의 어떠한 상태로든 재평가하거나 복원할 수 있는 체크포인트를 가질 수 있다.

-브랜치(Branch): 자신이 변경하고 싶은 자신만의 버전을 만든다.
주요 명령어
-git init: 깃 저장소를 초기화한다. 이것을 입력한 후에야 추가적인 깃 명령어들을 줄 수 있다.
-git config: “configure”의 준말, 처음에 깃을 설정할 때 가장 유용하다.
-git help: 커맨드 라인에 이걸 타이핑하면 21개의 가장 많이 사용하는 깃 명령어들이 나타난다.
-git status: 저장소 상태를 체크. 어떤 파일이 저장소 안에 있는지, 커밋이 필요한 변경사항이 있는지, 현재 저장소의 어떤 브랜치에서 작업하고 있는지 등을 볼 수 있다.
-git add: 깃이 새 파일들을 지켜보게 한다. 파일을 추가하면, 깃의 저장소 “스냅샷”에 포함된다. 
-git commit: 깃의 가장 중요한 명령어. 어떤 변경사항이라도 만든 후, 저장소의 “스냅샷”을 찍기 위해 이것을 입력한다. 보통 “git -commit -m “Message hear.” 형식으로 사용한다. -m은 명령어의 그다음 부분을 메시지로 읽어야 한다는 것을 말한다. 
-git branch: 새로운 브랜치를 만들고, 자신만의 변경사항과 화일 추가 등의 커밋 타임라인을 만든다.
-git checkout: 현재 있지 않은 저장소를 “체크아웃”할 수 있다. 이것은 체크하길 원하는 저장소로 옮겨가게 해주는 탐색 명령이다.
-git merge: 브랜치에서 작업을 끝내고, 모든 협업자가 볼 수 있는 master 브랜치로 병합할 수 있다.
-git push: 로컬 컴퓨터에서 작업하고 커밋을 깃허브에서 온라인으로도 볼 수 있기를 원한다면, 이 명령어로 깃허브에 변경사항을 저장한다.
-git pull: 로컬 컴퓨터에서 작업할 때, 작업하고 있는 저장소의 최신 버전을 원하면, 이 명령어로 깃허브로부터 변경사항을 다운로드한다(“pull”).
결론:git와 같은 오픈소스의 역할은 가면 갈수록 점점 더 중요해질 것이고 이 중에 현재 github가 인기 있는 이유는 단순한 git의 저장소가 아닌 커뮤니티 사이트의 역할도 하기 때문이다.

느낀 점:이번에 처음 github를 사용해 보았는데 아직은 익숙하지 않아 사용하기가 어렵다고 느꼈으며 왜 사용하는지 명확하게 알지도 못해 별 흥미가 생기지 않지만 오픈소스가 날이 가면 중요해짐에 따라서 github를 숙달되게 사용할 수 있도록 노력하겠습니다.
